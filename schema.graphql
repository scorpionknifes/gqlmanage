# GraphQL
scalar Time

type User {
  id: ID!
  name: String!
  username: String!
  location: String!
  abbr: String!
  email: String!
  openhab: String!
}

type Room {
  id: ID!
  roomNumber: String!
  memo: String!
  devices: [Device!]!
  username: String!
  password: String!
  createdDate: Time!
}

type Device {
  id: ID!
  room: Room!
  name: String!
  model: String!
  macAddress: String!
  memo: String!
  serialNumber: String!
  status: Int!
  type: Int!
  createdDate: Time!
  lastModified: Time!
}

type Token {
  token: String!
  expireAt: Int!
}

input LoginInput {
  username: String!
  password: String!
}

input UserInput {
  name: String!
  username: String!
  password: String!
  location: String!
  abbr: String!
  email: String!
  openhab: String!
}

input RoomInput {
  roomNumber: String!
  memo: String!
  username: String!
  password: String!
}

input DeviceInput {
  roomID: String!
  name: String!
  model: String!
  macAddress: String!
  memo: String!
  serialNumber: String!
  status: Int!
  type: Int!
}

type Query {
  users: [User!]!
  user(id: ID!): User!
  rooms: [Room!]!
  room(id: ID!): Room!
  devices: [Device!]!
  device(id: ID!): Device!
}

type Mutation {
  login(input: LoginInput!): Token!
  createRoom(input: RoomInput!): Room!
  updateRoom(id: ID!, input: RoomInput!): Room!
  createDevice(input: DeviceInput!): Device!
  updateDevice(id: ID!, input: DeviceInput!): Device!
  createUser(input: UserInput!): User!
  updateUser(id: ID!, input: UserInput!): User!
}
